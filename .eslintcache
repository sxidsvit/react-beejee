[{"D:\\React JS 2020\\react-beejee\\src\\index.js":"1","D:\\React JS 2020\\react-beejee\\src\\reportWebVitals.js":"2","D:\\React JS 2020\\react-beejee\\src\\App.js":"3","D:\\React JS 2020\\react-beejee\\src\\constants.js":"4","D:\\React JS 2020\\react-beejee\\src\\components\\Loader\\Loader.js":"5","D:\\React JS 2020\\react-beejee\\src\\components\\MainTable\\MainTable.js":"6","D:\\React JS 2020\\react-beejee\\src\\components\\SortArrow\\SortArrow.js":"7","D:\\React JS 2020\\react-beejee\\src\\utils.js":"8","D:\\React JS 2020\\react-beejee\\src\\components\\ModeSelector\\ModeSelector.js":"9","D:\\React JS 2020\\react-beejee\\src\\components\\FormNewData\\FormNewData.js":"10","D:\\React JS 2020\\react-beejee\\src\\context.js":"11","D:\\React JS 2020\\react-beejee\\src\\useFetch.js":"12"},{"size":546,"mtime":1612622341389,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":2457,"mtime":1612624467912,"results":"16","hashOfConfig":"14"},{"size":267,"mtime":1612622471470,"results":"17","hashOfConfig":"14"},{"size":394,"mtime":1612268178186,"results":"18","hashOfConfig":"14"},{"size":2947,"mtime":1612622553040,"results":"19","hashOfConfig":"14"},{"size":640,"mtime":1612453310719,"results":"20","hashOfConfig":"14"},{"size":63,"mtime":1612450755175,"results":"21","hashOfConfig":"14"},{"size":443,"mtime":1612457709998,"results":"22","hashOfConfig":"14"},{"size":5688,"mtime":1612464559891,"results":"23","hashOfConfig":"14"},{"size":93,"mtime":1612617404032,"results":"24","hashOfConfig":"14"},{"size":990,"mtime":1612624698446,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1hhxlhf",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React JS 2020\\react-beejee\\src\\index.js",[],["53","54"],"D:\\React JS 2020\\react-beejee\\src\\reportWebVitals.js",[],"D:\\React JS 2020\\react-beejee\\src\\App.js",[],"D:\\React JS 2020\\react-beejee\\src\\constants.js",[],"D:\\React JS 2020\\react-beejee\\src\\components\\Loader\\Loader.js",[],"D:\\React JS 2020\\react-beejee\\src\\components\\MainTable\\MainTable.js",[],"D:\\React JS 2020\\react-beejee\\src\\components\\SortArrow\\SortArrow.js",[],"D:\\React JS 2020\\react-beejee\\src\\utils.js",[],"D:\\React JS 2020\\react-beejee\\src\\components\\ModeSelector\\ModeSelector.js",[],"D:\\React JS 2020\\react-beejee\\src\\components\\FormNewData\\FormNewData.js",["55"],"import React, { useState } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport * as yup from 'yup'\r\nimport { Formik } from 'formik';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Col } from 'react-bootstrap'\r\nimport { developer } from '../../constants'\r\n\r\nconst TableNewData = ({ data, setData }) => {\r\n\r\n  const [openForm, setOpenForm] = useState(true)\r\n\r\n  // Form's fields handlers \r\n  // const onOpenFormHandler = () => {\r\n  //   setOpenForm(true)\r\n  // }\r\n\r\n  const onAddDataHandler = (values, isValidating, errors, touched) => {\r\n    isValidating.validateForm()\r\n\r\n    const newRecord = {\r\n      username: values.username,\r\n      email: values.email,\r\n      status: values.status,\r\n      text: values.text\r\n    }\r\n    console.log('newRecord: ', newRecord);\r\n\r\n    setData([newRecord, ...data])\r\n    // const page = selected + 1\r\n    // const params = `sort_field=${sortField}&sort_direction=${sort}&page=${page}`\r\n    // fetchData(params)\r\n\r\n    setOpenForm(false)\r\n    isValidating.resetForm()\r\n  }\r\n\r\n  const schema = yup.object({\r\n    username: yup.string().min(2, 'Minimum 2 characters').max(60, 'Maximum 60 characters').required('Required'),\r\n    email: yup.string().email('Invalid email').required('Required'),\r\n    status: yup.string().required('Required'),\r\n    text: yup.string().required('Required')\r\n  })\r\n\r\n  const initialValues = {\r\n    username: '',\r\n    email: '',\r\n    status: '0',\r\n    text: ''\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={schema}\r\n      onSubmit={onAddDataHandler}\r\n    >\r\n      {({\r\n        handleSubmit: onAddDataHandler,\r\n        handleChange,\r\n        handleBlur,\r\n        values,\r\n        touched,\r\n        isValid,\r\n        dirty,\r\n        errors,\r\n        isValidating,\r\n        isSubmitting\r\n      }) => (\r\n        < div className=\"d-flex flex-column justify-content-center align-items-center pb-3\">\r\n          {\r\n            openForm &&\r\n            <React.Fragment>\r\n              <h4 className=\"mb-5\" style={{ color: 'red' }}  > Attension!!! All form fields must be completed</h4>\r\n              <Form noValidate onSubmit={onAddDataHandler}>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGroupusername\">\r\n                    <Form.Label>User name</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"username\" value={values.username}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isValid={touched.username && !errors.username}\r\n                      isInvalid={touched.username && errors.username}\r\n                      placeholder=\"Enter first name\"\r\n                    />\r\n                    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.username}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formGroupEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" name=\"email\" value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isValid={touched.email && !errors.email}\r\n                      isInvalid={touched.email && errors.email}\r\n                      placeholder=\"Enter correct email\"\r\n                    />\r\n                    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"formGrouptext\">\r\n                  <Form.Label>text</Form.Label>\r\n                  <Form.Control as=\"textarea\" rows={3}\r\n                    name=\"text\" value={values.text}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    isValid={touched.text && !errors.text}\r\n                    isInvalid={touched.text && errors.text}\r\n                    placeholder=\"Enter your text\"\r\n                  />\r\n                  <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                  <Form.Control.Feedback type=\"invalid\">{errors.text}</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGroupstatus\">\r\n                    <Form.Label>status</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"status\" value={values.status}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      isValid={touched.status && !errors.status}\r\n                      isInvalid={touched.status && errors.status}\r\n                      placeholder=\"Enter status\"\r\n                    />\r\n                    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\r\n                    <Form.Control.Feedback type=\"invalid\">{errors.status}</Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group className=\"text-center\">\r\n                  <Button type=\"submit\"\r\n                    className=\"btn btn-success mt-2 mb-5\"\r\n                    disabled={!dirty || !isValid || isSubmitting}\r\n                  >\r\n                    Add new record</Button>\r\n                </Form.Group>\r\n              </Form>\r\n            </React.Fragment>\r\n          }\r\n\r\n        </div >\r\n\r\n      )\r\n      }\r\n    </Formik >\r\n  )\r\n}\r\n\r\nexport default TableNewData\r\n",["56","57"],"D:\\React JS 2020\\react-beejee\\src\\context.js",[],"D:\\React JS 2020\\react-beejee\\src\\useFetch.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":7,"column":10,"nodeType":"64","messageId":"65","endLine":7,"endColumn":19},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'developer' is defined but never used.","Identifier","unusedVar",["68"],["69"],"no-global-assign","no-unsafe-negation"]